define(["exports", "../../component-base/src/slot-controller.js"], function (_exports, _slotController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.InputController = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * A controller to create and initialize slotted `<input>` element.
   */
  var InputController = /*#__PURE__*/function (_SlotController) {
    babelHelpers.inherits(InputController, _SlotController);

    var _super = _createSuper(InputController);

    function InputController(host, callback) {
      babelHelpers.classCallCheck(this, InputController);
      return _super.call(this, host, 'input', function () {
        return document.createElement('input');
      }, function (host, node) {
        if (host.value) {
          node.setAttribute('value', host.value);
        }

        if (host.type) {
          node.setAttribute('type', host.type);
        } // Ensure every instance has unique ID


        var uniqueId = InputController._uniqueInputId = 1 + InputController._uniqueInputId || 0;
        host._inputId = "".concat(host.localName, "-").concat(uniqueId);
        node.id = host._inputId;

        if (typeof callback == 'function') {
          callback(node);
        }
      });
    }

    return babelHelpers.createClass(InputController);
  }(_slotController.SlotController);

  _exports.InputController = InputController;
});