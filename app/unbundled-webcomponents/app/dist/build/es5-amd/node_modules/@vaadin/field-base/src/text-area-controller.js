define(["exports", "../../component-base/src/slot-controller.js"], function (_exports, _slotController) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.TextAreaController = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * A controller to create and initialize slotted `<textarea>` element.
   */
  var TextAreaController = /*#__PURE__*/function (_SlotController) {
    babelHelpers.inherits(TextAreaController, _SlotController);

    var _super = _createSuper(TextAreaController);

    function TextAreaController(host, callback) {
      babelHelpers.classCallCheck(this, TextAreaController);
      return _super.call(this, host, 'textarea', function () {
        return document.createElement('textarea');
      }, function (host, node) {
        var value = host.getAttribute('value');

        if (value) {
          node.value = value;
        }

        var name = host.getAttribute('name');

        if (name) {
          node.setAttribute('name', name);
        } // Ensure every instance has unique ID


        var uniqueId = TextAreaController._uniqueTextAreaId = 1 + TextAreaController._uniqueTextAreaId || 0;
        host._textareaId = "".concat(host.localName, "-").concat(uniqueId);
        node.id = host._textareaId;

        if (typeof callback == 'function') {
          callback(node);
        }
      });
    }

    return babelHelpers.createClass(TextAreaController);
  }(_slotController.SlotController);

  _exports.TextAreaController = TextAreaController;
});