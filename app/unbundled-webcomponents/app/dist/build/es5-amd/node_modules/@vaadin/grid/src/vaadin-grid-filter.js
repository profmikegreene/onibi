define(["exports", "../../text-field/src/vaadin-text-field.js", "../../../@polymer/polymer/polymer-element.js", "../../component-base/src/async.js", "../../component-base/src/debounce.js"], function (_exports, _vaadinTextField, _polymerElement, _async, _debounce) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.GridFilter = void 0;

  var _templateObject_2b9984d0941811ec8d52c707f928eca0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `<vaadin-grid-filter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,
   * and handlers for filtering the grid data.
   *
   * #### Example:
   * ```html
   * <vaadin-grid-column id="column"></vaadin-grid-column>
   * ```
   * ```js
   * const column = document.querySelector('#column');
   * column.headerRenderer = (root, column) => {
   *   let filter = root.firstElementChild;
   *   if (!filter) {
   *     filter = document.createElement('vaadin-grid-filter');
   *     root.appendChild(filter);
   *   }
   *   filter.path = 'name.first';
   * };
   * column.renderer = (root, column, model) => {
   *   root.textContent = model.item.name.first;
   * };
   * ```
   *
   * @fires {CustomEvent} value-changed - Fired when the `value` property changes.
   *
   * @extends HTMLElement
   */
  var GridFilter = /*#__PURE__*/function (_ref) {
    babelHelpers.inherits(GridFilter, _ref);

    var _super = _createSuper(GridFilter);

    function GridFilter() {
      babelHelpers.classCallCheck(this, GridFilter);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(GridFilter, [{
      key: "connectedCallback",
      value:
      /** @protected */
      function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(GridFilter.prototype), "connectedCallback", this).call(this);
        this._connected = true;
      }
    }, {
      key: "ready",
      value:
      /** @protected */
      function ready() {
        babelHelpers.get(babelHelpers.getPrototypeOf(GridFilter.prototype), "ready", this).call(this);
        var child = this.firstElementChild;

        if (child && child.getAttribute('slot') !== 'filter') {
          console.warn('Make sure you have assigned slot="filter" to the child elements of <vaadin-grid-filter>');
          child.setAttribute('slot', 'filter');
        }
      }
      /** @private */

    }, {
      key: "_filterChanged",
      value: function _filterChanged(path, value, connected) {
        var _this = this;

        if (path === undefined || value === undefined || !connected) {
          return;
        }

        if (this._previousValue === undefined && value === '') {
          return;
        }

        this._previousValue = value;
        this._debouncerFilterChanged = _debounce.Debouncer.debounce(this._debouncerFilterChanged, _async.timeOut.after(200), function () {
          _this.dispatchEvent(new CustomEvent('filter-changed', {
            bubbles: true
          }));
        });
      }
    }, {
      key: "focus",
      value: function focus() {
        this.$.filter.focus();
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_2b9984d0941811ec8d52c707f928eca0 || (_templateObject_2b9984d0941811ec8d52c707f928eca0 = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: inline-flex;\n          max-width: 100%;\n        }\n\n        #filter {\n          width: 100%;\n          box-sizing: border-box;\n        }\n      </style>\n      <slot name=\"filter\">\n        <vaadin-text-field id=\"filter\" value=\"{{value}}\"></vaadin-text-field>\n      </slot>\n    "])));
      }
    }, {
      key: "is",
      get: function get() {
        return 'vaadin-grid-filter';
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * JS Path of the property in the item used for filtering the data.
           */
          path: String,

          /**
           * Current filter value.
           */
          value: {
            type: String,
            notify: true
          },

          /** @private */
          _connected: Boolean
        };
      }
    }, {
      key: "observers",
      get: function get() {
        return ['_filterChanged(path, value, _connected)'];
      }
    }]);
    return GridFilter;
  }( /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(_class, _PolymerElement);

    var _super2 = _createSuper(_class);

    function _class() {
      babelHelpers.classCallCheck(this, _class);
      return _super2.apply(this, arguments);
    }

    return babelHelpers.createClass(_class);
  }(_polymerElement.PolymerElement));

  _exports.GridFilter = GridFilter;
  customElements.define(GridFilter.is, GridFilter);
});