define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.isTouch = _exports.isSafari = _exports.isIPhone = _exports.isIPad = _exports.isIOS = _exports.isFirefox = _exports.isChrome = _exports.isAndroid = void 0;

  /**
   * @license
   * Copyright (c) 2021 - 2022 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   */
  var testUserAgent = function testUserAgent(regexp) {
    return regexp.test(navigator.userAgent);
  };

  var testPlatform = function testPlatform(regexp) {
    return regexp.test(navigator.platform);
  };

  var testVendor = function testVendor(regexp) {
    return regexp.test(navigator.vendor);
  };

  var isAndroid = testUserAgent(/Android/);
  _exports.isAndroid = isAndroid;
  var isChrome = testUserAgent(/Chrome/) && testVendor(/Google Inc/);
  _exports.isChrome = isChrome;
  var isFirefox = testUserAgent(/Firefox/); // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.

  _exports.isFirefox = isFirefox;
  var isIPad = testPlatform(/^iPad/) || testPlatform(/^Mac/) && navigator.maxTouchPoints > 1;
  _exports.isIPad = isIPad;
  var isIPhone = testPlatform(/^iPhone/);
  _exports.isIPhone = isIPhone;
  var isIOS = isIPhone || isIPad;
  _exports.isIOS = isIOS;
  var isSafari = testUserAgent(/^((?!chrome|android).)*safari/i);
  _exports.isSafari = isSafari;

  var isTouch = function () {
    try {
      document.createEvent('TouchEvent');
      return true;
    } catch (e) {
      return false;
    }
  }();

  _exports.isTouch = isTouch;
});