define(["exports", "../../../lit-element/lit-element.js", "./hax-text-context.js", "./hax-ce-context.js", "./hax-plate-context.js", "./hax-context-item.js", "../../absolute-position-behavior/absolute-position-behavior.js"], function (_exports, _litElement, _haxTextContext, _haxCeContext, _haxPlateContext, _haxContextItem, _absolutePositionBehavior) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxContextToolbar = void 0;

  var _templateObject_b07c4790af6311ebbe560fe9c4727db1, _templateObject2_b07c4790af6311ebbe560fe9c4727db1;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var HaxContextToolbar = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(HaxContextToolbar, _LitElement);

    var _super = _createSuper(HaxContextToolbar);

    function HaxContextToolbar() {
      babelHelpers.classCallCheck(this, HaxContextToolbar);
      return _super.call(this);
    }

    babelHelpers.createClass(HaxContextToolbar, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_b07c4790af6311ebbe560fe9c4727db1 || (_templateObject_b07c4790af6311ebbe560fe9c4727db1 = babelHelpers.taggedTemplateLiteral(["\n      <absolute-position-behavior\n        id=\"top\"\n        auto\n        justify\n        position=\"top\"\n        .target=\"", "\"\n      >\n        <div class=\"menu\">\n          <hax-text-context\n            id=\"text\"\n            class=\"item ", "\"\n            .target=\"", "\"\n          ></hax-text-context>\n          <hax-ce-context\n            id=\"ce\"\n            class=\"item ", "\"\n            .target=\"", "\"\n          ></hax-ce-context>\n          <hax-plate-context\n            id=\"plate\"\n            class=\"item ", "\"\n          ></hax-plate-context>\n        </div>\n      </absolute-position-behavior>\n      <absolute-position-behavior\n        auto\n        justify\n        position=\"bottom\"\n        .target=\"", "\"\n      >\n        <hax-context-item\n          icon=\"icons:add\"\n          label=\"", "\"\n          show-text-label\n          class=\"item ", " ", "\"\n        >\n        </hax-context-item>\n      </absolute-position-behavior>\n    "])), this.target || document.body, this.textContext ? "item-visible" : "", this.target, this.ceContext ? "item-visible" : "", this.target, this.plateContext ? "item-visible" : "", this.target || document.body, this.addLabel, this.addContext ? "item-visible" : "", this.trackMouse ? "item-tracking" : "");
      }
    }, {
      key: "haxVisible",
      get: function get() {
        var visible = this.target && (this.ceContext || this.topVisible);
        this.setAttribute("hax-visible", visible);
        return visible;
      }
    }, {
      key: "topVisible",
      get: function get() {
        return this.ceContext || this.plateContext || this.textContext;
      }
    }, {
      key: "topToolbar",
      get: function get() {
        return this.getToolbar("#top");
      }
    }, {
      key: "bottomToolbar",
      get: function get() {
        return this.getToolbar("#bottom");
      }
    }, {
      key: "getToolbar",
      value: function getToolbar(id) {
        return this.shadowRoot && this.shadowRoot.querySelector("#".concat(id)) ? this.shadowRoot.querySelector("#".concat(id)) : undefined;
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(HaxContextToolbar), "styles", this)), [(0, _litElement.css)(_templateObject2_b07c4790af6311ebbe560fe9c4727db1 || (_templateObject2_b07c4790af6311ebbe560fe9c4727db1 = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          width: 100%;\n        }\n        :host *:not(:defined) {\n          display: none !important;\n        }\n        :host(:not(.hax-visible)),\n        .item {\n          visibility: hidden;\n          opacity: 0;\n          z-index: 1000;\n          pointer-events: none;\n          transition: 0.2s top ease-in-out, 0.2s left ease-in-out;\n        }\n        :host(:hover),\n        :host(:focus-within),\n        .item:hover,\n        .item:focus-within {\n          z-index: var(--hax-ui-focus-z-index);\n        }\n        #top .menu {\n          display: flex;\n          width: 100%;\n          align-items: bottom;\n          justify-content: space-between;\n        }\n        #text,\n        #ce {\n          max-width: 280px;\n          flex: 1 1 auto;\n        }\n        #plate,\n        #add {\n          flex: 0 0 auto;\n        }\n        .item-visible,\n        .item-active {\n          visibility: visible;\n          pointer-events: all;\n          opacity: 1;\n        }\n        .item-tracking {\n          position: absolute;\n        }\n      "])))]);
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-context-toolbar";
      }
    }, {
      key: "properties",
      get: function get() {
        var _objectSpread2;

        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(HaxContextToolbar), "properties", this)), {}, (_objectSpread2 = {
          /**
           * See what's selected
           */
          target: {
            type: Object
          },

          /**
           * This is an inline context menu
           */
          addLabel: {
            type: String
          },

          /**
           * This is an inline context menu
           */
          addContext: {
            type: Boolean
          },

          /**
           * This is an inline context menu
           */
          plateContext: {
            type: Boolean,
            reflect: true
          },

          /**
           * This is an inline context menu
           */
          ceContext: {
            type: Boolean
          }
        }, babelHelpers.defineProperty(_objectSpread2, "plateContext", {
          type: Boolean
        }), babelHelpers.defineProperty(_objectSpread2, "trackMouse", {
          type: Boolean
        }), _objectSpread2));
      }
    }]);
    return HaxContextToolbar;
  }(_litElement.LitElement);
  /**
   *
   * @customElement
   * @extends HaxContextToolbar
   * @extends LitElement
   * @lit-html
   * @lit-element
   * @demo demo/index.html
   */


  _exports.HaxContextToolbar = HaxContextToolbar;
  window.customElements.define(HaxContextToolbar.tag, HaxContextToolbar);
});