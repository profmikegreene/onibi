define(["exports", "../../../lit-element/lit-element.js", "./simple-iconset.js"], function (_exports, _litElement, _simpleIconset) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleIconLite = _exports.SimpleIconBehaviors = void 0;

  var _templateObject_b862fc10af6311ebbe560fe9c4727db1, _templateObject2_b862fc10af6311ebbe560fe9c4727db1, _templateObject3_b862fc10af6311ebbe560fe9c4727db1;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var SimpleIconBehaviors = function SimpleIconBehaviors(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.noColorize = false;
        _this.dir = _this.documentDir;
        return _this;
      }

      babelHelpers.createClass(_class, [{
        key: "render",
        value: // render function
        function render() {
          return (0, _litElement.svg)(_templateObject_b862fc10af6311ebbe560fe9c4727db1 || (_templateObject_b862fc10af6311ebbe560fe9c4727db1 = babelHelpers.taggedTemplateLiteral(["\n        <svg xmlns=\"http://www.w3.org/2000/svg\" part=\"simple-icon-svg\" viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\">\n          <filter\n            color-interpolation-filters=\"sRGB\"\n            x=\"0\"\n            y=\"0\"\n            height=\"24px\"\n            width=\"24px\"\n          >\n            ", "\n            <feComposite operator=\"in\" in=\"COLOR\" in2=\"SourceAlpha\" />\n          </filter>\n          <image\n            xlink:href=\"\"\n            width=\"24px\"\n            height=\"24px\"\n            focusable=\"false\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          ></image>\n        </svg>\n      "])), this.feFlood);
        }
      }, {
        key: "feFlood",
        get: function get() {
          return !this.noColorize ? (0, _litElement.svg)(_templateObject2_b862fc10af6311ebbe560fe9c4727db1 || (_templateObject2_b862fc10af6311ebbe560fe9c4727db1 = babelHelpers.taggedTemplateLiteral(["<feFlood result=\"COLOR\" />"]))) : "";
        } // properties available to the custom element for data binding

      }, {
        key: "documentDir",
        get: function get() {
          return document.body.getAttribute("xml:dir") || document.body.getAttribute("dir") || document.documentElement.getAttribute("xml:dir") || document.documentElement.getAttribute("dir") || "ltr";
        }
      }, {
        key: "firstUpdated",
        value: function firstUpdated(changedProperties) {
          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "firstUpdated", this)) {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "firstUpdated", this).call(this, changedProperties);
          }

          var randomId = "f-" + Math.random().toString().slice(2, 10);
          this.shadowRoot.querySelector("image").style.filter = "url(#".concat(randomId, ")");
          this.shadowRoot.querySelector("filter").setAttribute("id", randomId);
        }
        /**
         * Set the src by the icon property
         */

      }, {
        key: "setSrcByIcon",
        value: function setSrcByIcon(context) {
          this.src = _simpleIconset.SimpleIconsetStore.getIcon(this.icon, context);
          return this.src;
        }
      }, {
        key: "updated",
        value: function updated(changedProperties) {
          var _this2 = this;

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "updated", this)) {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "updated", this).call(this, changedProperties);
          }

          changedProperties.forEach(function (oldValue, propName) {
            if (propName == "icon") {
              if (_this2[propName]) {
                _this2.setSrcByIcon(_this2);
              } else {
                _this2.src = null;
              }
            }

            if (propName == "src") {
              // look this up in the registry
              if (_this2[propName]) {
                _this2.shadowRoot.querySelector("image").setAttribute("xlink:href", "".concat(_this2[propName]));
              }
            }
          });
        }
      }], [{
        key: "styles",
        get: function get() {
          return [babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this) || []].concat([(0, _litElement.css)(_templateObject3_b862fc10af6311ebbe560fe9c4727db1 || (_templateObject3_b862fc10af6311ebbe560fe9c4727db1 = babelHelpers.taggedTemplateLiteral(["\n          :host {\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            position: relative;\n            vertical-align: middle;\n            height: var(--simple-icon-height, 24px);\n            width: var(--simple-icon-width, 24px);\n          }\n          :host([dir=\"rtl\"]) svg {\n            direction: rtl;\n          }\n          :host([hidden]) {\n            display: none;\n          }\n          svg {\n            height: var(--simple-icon-height, 24px);\n            width: var(--simple-icon-width, 24px);\n            max-height: var(--simple-icon-height, 24px);\n            max-width: var(--simple-icon-width, 24px);\n            filter: var(--simple-icon-color, initial);\n          }\n          feFlood {\n            flood-color: var(--simple-icon-color, currentColor);\n          }\n          svg {\n            pointer-events: none;\n          }\n        "])))]);
        }
      }, {
        key: "properties",
        get: function get() {
          return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)), {}, {
            dir: {
              type: String,
              reflect: true
            },
            src: {
              type: String
            },
            noColorize: {
              type: Boolean,
              attribute: "no-colorize"
            },
            icon: {
              type: String,
              attribute: "icon",
              reflect: true
            }
          });
        }
      }]);
      return _class;
    }(SuperClass);
  };
  /**
   * `simple-icon-lite`
   * `Render an SVG based icon`
   *
   * @microcopy - language worth noting:
   *  -
   *
   * @customElement
   * @extends LitElement
   * @extends SimpleIconBehaviors
   * @demo demo/lite.html
   * @demo demo/button-lite.html Button (Lite)
   * @element simple-icon-lite
   */


  _exports.SimpleIconBehaviors = SimpleIconBehaviors;

  var SimpleIconLite = /*#__PURE__*/function (_SimpleIconBehaviors) {
    babelHelpers.inherits(SimpleIconLite, _SimpleIconBehaviors);

    var _super2 = _createSuper(SimpleIconLite);

    function SimpleIconLite() {
      babelHelpers.classCallCheck(this, SimpleIconLite);
      return _super2.apply(this, arguments);
    }

    babelHelpers.createClass(SimpleIconLite, null, [{
      key: "tag",
      get:
      /**
       * This is a convention, not the standard
       */
      function get() {
        return "simple-icon-lite";
      }
    }]);
    return SimpleIconLite;
  }(SimpleIconBehaviors(_litElement.LitElement));

  _exports.SimpleIconLite = SimpleIconLite;
  customElements.define(SimpleIconLite.tag, SimpleIconLite);
});