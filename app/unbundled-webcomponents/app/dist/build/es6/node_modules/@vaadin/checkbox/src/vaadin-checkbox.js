/**
 * @license
 * Copyright (c) 2017 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
import{html as e,PolymerElement as t}from"../../../@polymer/polymer/polymer-element.js";import{ActiveMixin as i}from"../../component-base/src/active-mixin.js";import{ControllerMixin as r}from"../../component-base/src/controller-mixin.js";import{ElementMixin as o}from"../../component-base/src/element-mixin.js";import{CheckedMixin as s}from"../../field-base/src/checked-mixin.js";import{DelegateFocusMixin as a}from"../../field-base/src/delegate-focus-mixin.js";import{InputController as l}from"../../field-base/src/input-controller.js";import{LabelMixin as n}from"../../field-base/src/label-mixin.js";import{LabelledInputController as c}from"../../field-base/src/labelled-input-controller.js";import{SlotTargetController as d}from"../../field-base/src/slot-target-controller.js";import{ThemableMixin as p}from"../../vaadin-themable-mixin/vaadin-themable-mixin.js";class Checkbox extends(n(s(a(i(o(p(r(t)))))))){static get is(){return"vaadin-checkbox"}static get template(){return e`
      <style>
        :host {
          display: inline-block;
        }

        :host([hidden]) {
          display: none !important;
        }

        :host([disabled]) {
          -webkit-tap-highlight-color: transparent;
        }

        .vaadin-checkbox-container {
          display: grid;
          grid-template-columns: auto 1fr;
          align-items: baseline;
        }

        .vaadin-checkbox-wrapper {
          position: relative;
          height: 100%;
        }

        /* visually hidden */
        ::slotted(input) {
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          width: 100%;
          height: 100%;
          opacity: 0;
          cursor: inherit;
          margin: 0;
        }
      </style>
      <div class="vaadin-checkbox-container">
        <div class="vaadin-checkbox-wrapper">
          <div part="checkbox"></div>
          <slot name="input"></slot>
        </div>

        <slot name="label"></slot>

        <div style="display: none !important">
          <slot id="noop"></slot>
        </div>
      </div>
    `}static get properties(){return{indeterminate:{type:Boolean,notify:!0,value:!1,reflectToAttribute:!0},name:{type:String,value:""}}}static get delegateProps(){return[...super.delegateProps,"indeterminate"]}static get delegateAttrs(){return[...super.delegateAttrs,"name"]}constructor(){super(),this._setType("checkbox"),this.value="on"}connectedCallback(){super.connectedCallback(),this._inputController||(this._inputController=new l(this,(e=>{this._setInputElement(e),this._setFocusElement(e),this.stateTarget=e,this.ariaTarget=e})),this.addController(this._inputController),this.addController(new c(this.inputElement,this._labelController)),this.addController(new d(this.$.noop,(()=>this._labelController.node),(()=>this.__warnDeprecated()))))}__warnDeprecated(){console.warn('WARNING: Since Vaadin 22, placing the label as a direct child of a <vaadin-checkbox> is deprecated.\nPlease use <label slot="label"> wrapper or the label property instead.')}_shouldSetActive(e){return"a"!==e.target.localName&&super._shouldSetActive(e)}_toggleChecked(e){this.indeterminate&&(this.indeterminate=!1),super._toggleChecked(e)}}customElements.define(Checkbox.is,Checkbox);export{Checkbox};