/**
 * @license
 * Copyright (c) 2016 - 2022 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
import"../../text-field/src/vaadin-text-field.js";import{html as e,PolymerElement as t}from"../../../@polymer/polymer/polymer-element.js";import{timeOut as i}from"../../component-base/src/async.js";import{Debouncer as r}from"../../component-base/src/debounce.js";class GridFilter extends class extends t{}{static get template(){return e`
      <style>
        :host {
          display: inline-flex;
          max-width: 100%;
        }

        #filter {
          width: 100%;
          box-sizing: border-box;
        }
      </style>
      <slot name="filter">
        <vaadin-text-field id="filter" value="{{value}}"></vaadin-text-field>
      </slot>
    `}static get is(){return"vaadin-grid-filter"}static get properties(){return{path:String,value:{type:String,notify:!0},_connected:Boolean}}connectedCallback(){super.connectedCallback(),this._connected=!0}static get observers(){return["_filterChanged(path, value, _connected)"]}ready(){super.ready();const e=this.firstElementChild;e&&"filter"!==e.getAttribute("slot")&&(console.warn('Make sure you have assigned slot="filter" to the child elements of <vaadin-grid-filter>'),e.setAttribute("slot","filter"))}_filterChanged(e,t,s){void 0!==e&&void 0!==t&&s&&(void 0===this._previousValue&&""===t||(this._previousValue=t,this._debouncerFilterChanged=r.debounce(this._debouncerFilterChanged,i.after(200),(()=>{this.dispatchEvent(new CustomEvent("filter-changed",{bubbles:!0}))}))))}focus(){this.$.filter.focus()}}customElements.define(GridFilter.is,GridFilter);export{GridFilter};