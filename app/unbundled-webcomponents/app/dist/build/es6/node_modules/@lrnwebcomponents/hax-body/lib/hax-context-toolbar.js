import{LitElement as t,html as e,css as o}from"../../../lit-element/lit-element.js";import"./hax-text-context.js";import"./hax-ce-context.js";import"./hax-plate-context.js";import"./hax-context-item.js";import"../../absolute-position-behavior/absolute-position-behavior.js";class HaxContextToolbar extends t{static get styles(){return[...super.styles,o`
        :host {
          width: 100%;
        }
        :host *:not(:defined) {
          display: none !important;
        }
        :host(:not(.hax-visible)),
        .item {
          visibility: hidden;
          opacity: 0;
          z-index: 1000;
          pointer-events: none;
          transition: 0.2s top ease-in-out, 0.2s left ease-in-out;
        }
        :host(:hover),
        :host(:focus-within),
        .item:hover,
        .item:focus-within {
          z-index: var(--hax-ui-focus-z-index);
        }
        #top .menu {
          display: flex;
          width: 100%;
          align-items: bottom;
          justify-content: space-between;
        }
        #text,
        #ce {
          max-width: 280px;
          flex: 1 1 auto;
        }
        #plate,
        #add {
          flex: 0 0 auto;
        }
        .item-visible,
        .item-active {
          visibility: visible;
          pointer-events: all;
          opacity: 1;
        }
        .item-tracking {
          position: absolute;
        }
      `]}constructor(){super()}static get tag(){return"hax-context-toolbar"}render(){return e`
      <absolute-position-behavior
        id="top"
        auto
        justify
        position="top"
        .target="${this.target||document.body}"
      >
        <div class="menu">
          <hax-text-context
            id="text"
            class="item ${this.textContext?"item-visible":""}"
            .target="${this.target}"
          ></hax-text-context>
          <hax-ce-context
            id="ce"
            class="item ${this.ceContext?"item-visible":""}"
            .target="${this.target}"
          ></hax-ce-context>
          <hax-plate-context
            id="plate"
            class="item ${this.plateContext?"item-visible":""}"
          ></hax-plate-context>
        </div>
      </absolute-position-behavior>
      <absolute-position-behavior
        auto
        justify
        position="bottom"
        .target="${this.target||document.body}"
      >
        <hax-context-item
          icon="icons:add"
          label="${this.addLabel}"
          show-text-label
          class="item ${this.addContext?"item-visible":""} ${this.trackMouse?"item-tracking":""}"
        >
        </hax-context-item>
      </absolute-position-behavior>
    `}static get properties(){return{...super.properties,target:{type:Object},addLabel:{type:String},addContext:{type:Boolean},plateContext:{type:Boolean,reflect:!0},ceContext:{type:Boolean},plateContext:{type:Boolean},trackMouse:{type:Boolean}}}get haxVisible(){let t=this.target&&(this.ceContext||this.topVisible);return this.setAttribute("hax-visible",t),t}get topVisible(){return this.ceContext||this.plateContext||this.textContext}get topToolbar(){return this.getToolbar("#top")}get bottomToolbar(){return this.getToolbar("#bottom")}getToolbar(t){return this.shadowRoot&&this.shadowRoot.querySelector(`#${t}`)?this.shadowRoot.querySelector(`#${t}`):void 0}}window.customElements.define(HaxContextToolbar.tag,HaxContextToolbar);export{HaxContextToolbar};