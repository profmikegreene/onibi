/**
 * Copyright 2021
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as o}from"../../lit-element/lit-element.js";import"../es-global-bridge/es-global-bridge.js";var i;class BarcodeReader extends e{static get styles(){return o`
      :host {
        display: block;
        position: relative;
      }
      canvas {
        display: none;
      }
      video {
        border-style: solid;
        border-color: rgba(0, 0, 0, 0.5);
        border-width: 5px;
      }
      #hidden {
        display: none;
      }
      #hidden2 {
        display: none;
      }
    `}static get properties(){return{value:{type:String,reflect:!0},scale:{type:Number,reflect:!0}}}render(){return t`
      <div id="hidden">
        <div>
          <video
            muted
            autoplay
            id="video"
            playsinline="true"
            width="${this.scale}%"
            height="${this.scale}%"
          ></video>
          <canvas id="canvas" style="display: none; float: bottom;"></canvas>
        </div>
      </div>
      <div>
        Result: <span><input type="text" .value="${this.value}" /> </span
        ><button id="render">Initialize scanner</button>
      </div>
      <div id="hidden2">
        <div class="select">
          <label for="videoSource">Video source: </label>
          <select id="videoSource"></select>
        </div>
        <button id="go">Scan</button>
      </div>
    `}constructor(){super(),window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("ZXing",decodeURIComponent(import.meta.url)+"/../lib/zxing.js"),window.addEventListener("es-bridge-zxing-loaded",this._control.bind(this))}_control(){let e=this.shadowRoot.querySelector("#video"),t=this.shadowRoot.querySelector("#canvas"),o=t.getContext("2d");var d=this.shadowRoot.querySelector("select#videoSource");this.shadowRoot.getElementById("videoOption");let n=this.shadowRoot.getElementById("go"),a=!1,r=!0,s=null,l=null;var tick=function(){window.ZXing?setTimeout((()=>{console.log("loaded zxing instance"),s=new window.ZXing,l=s.Runtime.addFunction(decodeCallback)}),100):setTimeout(tick,100)};tick();var decodeCallback=async(e,t,o,i)=>{var d=new Uint8Array(s.HEAPU8.buffer,e,t);console.log(String.fromCharCode.apply(null,d)),this.value=String.fromCharCode.apply(null,d),n.removeAttribute("disabled")};function scanBarcode(){if(null==s)return n.removeAttribute("disabled"),void alert("Barcode Reader is not ready!");var t=null,d=0,a=0;r?(t=o,d=640,a=480):(t=mobileCtx,d=240,a=320),t.drawImage(e,0,0,d,a);var c=document.createElement("canvas");c.width=i.videoWidth,c.height=i.videoHeight;var h=c.getContext("2d"),v=i.videoWidth,u=i.videoHeight;h.drawImage(e,0,0,v,u);var m=h.getImageData(0,0,v,u).data,g=s._resize(v,u);console.time("decode barcode");for(var w=0,p=0;w<m.length;w+=4,p++)s.HEAPU8[g+p]=m[w];var y=s._decode_any(l);console.timeEnd("decode barcode"),console.log(y),-2==y?setTimeout(scanBarcode,30):-3==y?(console.error("error code: ",y),n.removeAttribute("disabled")):0===y&&n.removeAttribute("disabled")}r="pc"==function browserRedirect(){var e=navigator.userAgent.toLowerCase(),t="ipad"==e.match(/ipad/i),o="iphone os"==e.match(/iphone os/i),i="midp"==e.match(/midp/i),d="rv:1.2.3.4"==e.match(/rv:1.2.3.4/i),n="ucweb"==e.match(/ucweb/i),a="android"==e.match(/android/i),r="windows ce"==e.match(/windows ce/i),s="windows mobile"==e.match(/windows mobile/i);return t||o||i||d||n||a||r||s?"phone":"pc"}(),n.onclick=()=>{console.log("click"),this.value="",t.style.display="none",a=!1,n.setAttribute("disabled",""),scanBarcode()};d=this.shadowRoot.querySelector("select#videoSource");function getStream(){n.removeAttribute("disabled"),window.stream&&window.stream.getTracks().forEach((function(e){e.stop()}));var e={video:{deviceId:{exact:d.value}}};navigator.mediaDevices.getUserMedia(e).then(gotStream).catch(handleError)}function gotStream(t){window.stream=t,e.srcObject=t}function handleError(e){console.error("Error: ",e)}navigator.mediaDevices.enumerateDevices().then((function gotDevices(e){for(var t=e.length-1;t>=0;--t){var o=e[t],i=document.createElement("option");i.value=o.deviceId,"videoinput"===o.kind?(i.text=o.label||"camera "+(d.length+1),d.appendChild(i)):console.log("Found one other kind of source/device: ",o)}})).then(getStream).catch(handleError),d.onchange=getStream}static get tag(){return"barcode-reader"}updated(e){e.forEach(((e,t)=>{"value"===t&&this.dispatchEvent(new CustomEvent("value-changed",{detail:this}))}))}firstUpdated(){this.start().then((e=>{})),this.__context=this.shadowRoot.querySelector("canvas").getContext("2d"),this.__video=this.shadowRoot.querySelector("video"),this.__videoInputSelector=this.shadowRoot.querySelector("#videoInput"),i=this.shadowRoot.getElementById("video"),this._renderVideo().then((e=>{}))}async _onFrame(){this.__video.videoWidth>0&&this._drawFrame(this.__video),this.__animationFrameId=requestAnimationFrame(this._onFrame.bind(this))}_drawFrame(e){this.__context.drawImage(e,0,0,this.width,this.height,0,0,this.width,this.height)}async start(){this.shadowRoot.getElementById("render").addEventListener("click",(()=>{"Initialize scanner"===this.shadowRoot.getElementById("render").innerHTML&&this._control()}))}async _renderVideo(){let e=this.shadowRoot.getElementById("hidden"),t=this.shadowRoot.getElementById("render"),o=this.shadowRoot.getElementById("hidden2");e.style.display="none",this.shadowRoot.getElementById("render").addEventListener("click",(()=>{setTimeout((()=>{"none"===e.style.display?(e.style.display="inline",t.innerHTML="Hide Scanner",o.style.display="inline"):(e.style.display="none",t.innerHTML="Show Scanner",o.style.display="none")}),100)}))}}customElements.define(BarcodeReader.tag,BarcodeReader);export{BarcodeReader};