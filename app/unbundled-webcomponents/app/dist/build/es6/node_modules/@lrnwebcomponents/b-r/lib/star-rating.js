import{html as t,css as e,LitElement as s}from"../../../lit-element/lit-element.js";import"../../simple-icon/lib/simple-icon-button.js";export class StarRating extends s{static get styles(){return e`
      :host {
        display: block;
        padding: 25px;
        color: var(--star-rating-text-color, #000);
      }
      #star-rating {
        display: inline-flex;
      }
      .star {
        background-color: black;
      }
      #rating {
        padding-left: 20px; //responsive sizes weren't working well
      }
      h2 {
        margin: 0; //keeps them both on the same line
      }
      :host(:not([interactive])) simple-icon-button::part(button) {
        cursor: unset;
      }
    `}static get properties(){return{score:{type:Number},possible:{type:Number},interactive:{type:Boolean,reflect:!0},numStars:{type:Number,attribute:"num-stars"},_calPercent:{type:Number}}}constructor(){super(),this._calPercent=0,this.numStars=5,this.score=0,this.possible=100,this.interactive=!1}render(){return t`
      <div class="star-rating">
        <div id="stars">
          ${this.renderStar(this.numStars,this.interactive)}
        </div>
        <div id="rating">
          <h2>${this._calPercent} (${this.score}/${this.possible})</h2>
        </div>
      </div>
    `}renderStar(e,s){if(0===e)return t``;let r=0;const i=[];for(;r<e;)r+1<e*this._calPercent?i.push(t`<simple-icon-button
            icon="star"
            dark
            contrast="1"
            class="star"
            ?disabled="${!s}"
          ></simple-icon-button>`):e*this._calPercent-(r+1)<-.01&&e*this._calPercent-(r+1)>=-.5?i.push(t`<simple-icon-button
            icon="star-half"
            dark
            contrast="1"
            class="star"
            ?disabled="${!s}"
          ></simple-icon-button>`):i.push(t`<simple-icon-button
            icon="star-border"
            dark
            contrast="1"
            class="star"
            ?disabled="${!s}"
          ></simple-icon-button>`),r++;return i}updated(t){t.forEach(((t,e)=>{["score","possible"].includes(e)&&0!==this.possible&&(this._calPercent=Math.round(this.score/this.possible*100)/100)}))}}customElements.define("star-rating",StarRating);