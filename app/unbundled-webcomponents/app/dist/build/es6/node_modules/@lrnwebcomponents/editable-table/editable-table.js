/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as i}from"../../lit-element/lit-element.js";import{displayBehaviors as o,editableTableStyles as l}from"./lib/editable-table-behaviors.js";import"../rich-text-editor/rich-text-editor.js";import"../rich-text-editor/lib/toolbars/rich-text-editor-toolbar-mini.js";import"../simple-tooltip/simple-tooltip.js";import"../simple-icon/lib/simple-icon-lite.js";import"../simple-icon/lib/simple-icons.js";import"../hax-iconset/lib/simple-hax-iconset.js";import"./lib/editable-table-editor-rowcol.js";import"./lib/editable-table-editor-toggle.js";import"./lib/editable-table-display.js";import{ReplaceWithPolyfill as d}from"../utils/utils.js";Element.prototype.replaceWith||(Element.prototype.replaceWith=d),CharacterData.prototype.replaceWith||(CharacterData.prototype.replaceWith=d),DocumentType.prototype.replaceWith||(DocumentType.prototype.replaceWith=d);class EditableTable extends(o(e)){static get styles(){return[...super.styles||[],...l,i`
        :host {
          --paper-listbox-background-color: var(
            --editable-table-rowcol-bg-color
          );
        }
        .filter-icon,
        .sortable-icon {
          display: none;
          opacity: 0.4;
          width: 24px;
          height: 24px;
        }
        :host([sort]) tbody .tr:first-child .sortable-icon,
        :host([filter]) tbody .tr:not(:first-of-type) .filter-icon {
          display: inline-block;
          opacity: 0.25;
        }
        table {
          min-width: calc(100% - 2.3px);
          width: unset;
          height: 1px;
        }
        caption {
          width: 100%;
          padding: 0;
          margin: 0;
          color: var(
            --editable-table-caption-color,
            var(--editable-table-color, #222)
          );
        }
        table *:focus,
        table *:hover,
        table *:focus-within {
          z-index: 2;
        }
        caption,
        .th-or-td {
          border: 1px solid #ddd;
        }
        label,
        .label {
          color: var(--editable-table-secondary-text-color, #444);
          font-size: var(--editable-table-secondary-font-size, 12px);
          font-family: var(
            --editable-table-secondary-font-family,
            "Roboto",
            "Noto",
            sans-serif
          );
        }
        .field-group {
          width: 100%;
          padding: 0;
          margin: 0;
          transition: all 2s;
          color: var(
            --editable-table-caption-color,
            var(--editable-table-color, #222)
          );
        }
        .field-group:not([hidden]) {
          display: flex;
          flex-wrap: wrap;
          justify-content: space-between;
          align-items: center;
        }
        caption > *,
        .field-group > * {
          margin: 0 2.5px;
        }
        caption {
          position: relative;
        }
        .field-group .field-group {
          width: unset;
        }
        th {
          padding: 0;
          border-width: var(--editable-table-border-width, 1px);
          border-style: var(--editable-table-border-style, solid);
          border-color: var(--editable-table-border-color, #999);
        }
        td {
          margin: 0;
          padding: 0;
          position: relative;
        }
        rich-text-editor-toolbar-mini {
          position: absolute;
          min-width: 200px;
          height: 0;
        }
        rich-text-editor {
          margin-bottom: 1px;
          padding: var(--editable-table-row-vertical-padding, 10px)
            var(--editable-table-row-horizontal-padding, 6px);
          border: none !important;
          --rich-text-editor-min-height: 12px;
        }
        td #icons {
          position: absolute;
          right: 0;
          top: calc(50% - 12px);
          width: 24px;
        }
        td simple-icon-lite {
          width: 24px;
        }
        th:hover,
        th:focus-within {
          background-color: var(
            --editable-table-rowcol-hover-bg-color,
            var(--editable-table-heading-bg-color, #e8e8e8)
          );
        }
        .th:first-child {
          width: 96px;
        }
        :host([responsive]) thead th:nth-of-type(3),
        :host([responsive]) .tr td:nth-of-type(2) {
          border-right-width: calc(var(--editable-table-border-width) + 5px);
          border-right-style: double;
        }
      `]}render(){return t`
      <rich-text-editor-toolbar-mini
        id="toolbar"
        .config="${this.config}"
        show="selection"
      ></rich-text-editor-toolbar-mini>
      <editable-table-display
        aria-hidden="${this.editMode?"true":"false"}"
        ?bordered="${this.bordered}"
        caption="${this.caption}"
        ?column-header="${this.columnHeader}"
        ?column-striped="${this.columnStriped}"
        ?condensed="${this.condensed}"
        ?downloadable="${this.downloadable}"
        .data="${this.data}"
        ?filter="${this.filter}"
        ?footer="${this.footer}"
        ?hidden="${this.editMode}"
        ?numeric-styles="${this.numericStyles}"
        ?printable="${this.printable}"
        ?responsive="${this.responsive}"
        ?row-header="${this.rowHeader}"
        ?sort="${this.sort}"
        ?striped="${this.striped}"
      >
      </editable-table-display>
      <div
        ?hidden="${!this.editMode}"
        aria-hidden="${this.editMode?"false":"true"}"
        id="outer"
      >
        <div id="inner">
          <p class="sr-only">Table Editor</p>
          <table
            id="table-editmode"
            ?bordered="${this.bordered}"
            ?column-header="${this.columnHeader}"
            ?column-striped="${this.columnStriped}"
            ?condensed="${this.condensed}"
            ?downloadable="${this.downloadable}"
            ?filter="${this.filter}"
            ?footer="${this.footer}"
            ?numeric-styles="${this.numericStyles}"
            ?printable="${this.printable}"
            ?responsive="${this.responsive}"
            ?row-header="${this.rowHeader}"
            ?sort="${this.sort}"
            ?striped="${this.striped}"
          >
            <caption>
              <p class="sr-only">Edit Mode for</p>
              <rich-text-editor
                autofocus
                @editing-disabled="${this._captionChanged}"
                toolbar="toolbar"
                id="caption"
                label="Caption"
                placeholder="Name your table by adding a caption here."
                rawhtml="${this.caption}"
                type="rich-text-editor-toolbar-mini"
              >
              </rich-text-editor>
            </caption>
            <thead>
              <tr class="tr">
                <th scope="col">
                  <span class="sr-only">Row Operations</span>
                </th>
                ${(this.data[0]||[]).map(((e,i)=>t`
                    <th
                      class="col-${i}"
                      scope="col"
                      ?numeric="${this._isNumericColumn(i)}"
                    >
                      <editable-table-editor-rowcol
                        ?condensed="${this.condensed}"
                        index="${i}"
                        @rowcol-action="${this._handleRowColumnMenu}"
                        @rowcol-menuopen="${this._handleMenuOpen}"
                      >
                      </editable-table-editor-rowcol>
                    </th>
                  `))}
              </tr>
            </thead>
            <tbody id="tbody" class="tbody">
              ${this.data.map(((e,i)=>t`
                  <tr
                    class="tr ${0==i&&this.columnHeader?"thead-tr":i==this.data.length-1&&this.footer?"tfoot-tr":"tbody-tr"}"
                  >
                    <th scope="row">
                      <editable-table-editor-rowcol
                        class="cell"
                        ?condensed="${this.condensed}"
                        index="${i}"
                        row
                        @rowcol-action="${this._handleRowColumnMenu}"
                      >
                      </editable-table-editor-rowcol>
                    </th>
                    ${(e||[]).map(((e,o)=>t`
                        <td
                          class="${0===o&&this.rowHeader||0==i&&this.columnHeader?"th":"td"} th-or-td"
                          ?negative="${this._isNegative(e)}"
                          ?numeric="${this._isNumericColumn(o)}"
                          @click="${this._onCellClick}"
                        >
                          <rich-text-editor
                            autofocus
                            @editing-disabled="${e=>this._onCellValueChange(e,i,o)}"
                            class="cell"
                            disable-mouseover
                            toolbar="mini"
                            id="cell-${i}-${o}"
                            label="${`Cell ${this._getLabel(o,!1)}${i}`}"
                            rawhtml="${e}"
                            type="rich-text-editor-toolbar"
                          >
                          </rich-text-editor>
                          <div id="icons">
                            <simple-icon-lite
                              class="sortable-icon"
                              icon="editable-table:sortable"
                              aria-hidden="true"
                            ></simple-icon-lite>
                            <simple-icon-lite
                              class="filter-icon"
                              icon="editable-table:filter-off"
                            ></simple-icon-lite>
                          </div>
                        </td>
                      `))}
                  </tr>
                `))}
            </tbody>
          </table>
        </div>
        <div class="field-group">
          <div class="field-group">
            <div class="label">Headers and footers</div>
            <editable-table-editor-toggle
              id="columnHeader"
              icon="editable-table:column-headers"
              label="First row has column headers."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.columnHeader}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="rowHeader"
              icon="editable-table:row-headers"
              @change="${this._onTableSettingChange}"
              label="First column has row headers."
              ?toggled="${this.rowHeader}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="footer"
              icon="editable-table:footer"
              label="Last row is a footer."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.footer}"
            >
            </editable-table-editor-toggle>
          </div>
          <div class="field-group" ?hidden="${this.hideDisplay}">
            <div class="label">Display</div>
            <editable-table-editor-toggle
              id="bordered"
              ?disabled="${this.hideBordered}"
              ?hidden="${this.hideBordered}"
              icon="image:grid-on"
              label="Borders."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.bordered}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="striped"
              ?disabled="${this.hideStriped}"
              ?hidden="${this.hideStriped}"
              icon="editable-table:row-striped"
              label="Alternating rows."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.striped}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="columnStriped"
              ?disabled="${this.hideStriped}"
              ?hidden="${this.hideStriped}"
              icon="editable-table:col-striped"
              label="Alternating columns."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.columnStriped}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="condensed"
              ?disabled="${this.hideCondensed}"
              ?hidden="${this.hideCondensed}"
              icon="editable-table:row-condensed"
              label="Condensed rows."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.condensed}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="numericStyles"
              ?disabled="${this.hideNumericStyles}"
              ?hidden="${this.hideNumericStyles}"
              icon="editable-table:numbers"
              label="Style numeric cells."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.numericStyles}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="responsive"
              ?disabled="${this.hideResponsive}"
              ?hidden="${this.hideResponsive}"
              icon="device:devices"
              label="Adjust width to screen size."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.responsive}"
            >
            </editable-table-editor-toggle>
          </div>
          <div class="field-group" ?hidden="${this.hideSortFilter}">
            <div class="label">Data</div>
            <editable-table-editor-toggle
              id="sort"
              ?disabled="${this._isSortDisabled(this.hideSort,this.columnHeader)}"
              ?hidden="${this._isSortDisabled(this.hideSort,this.columnHeader)}"
              label="Column sorting (for tables with column headers)."
              icon="editable-table:sortable"
              @change="${this._onTableSettingChange}"
              ?toggled="${this.sort}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="filter"
              ?disabled="${this.hideFilter}"
              ?hidden="${this.hideFilter}"
              icon="editable-table:filter"
              label="Column filtering."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.filter}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="downloadable"
              ?disabled="${this.hideDownloadable}"
              ?hidden="${this.hideDownloadable}"
              icon="file-download"
              label="Allow downloading as CSV."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.downloadable}"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="printable"
              ?disabled="${this.hidePrintable}"
              ?hidden="${this.hidePrintable}"
              icon="print"
              label="Allow printing."
              @change="${this._onTableSettingChange}"
              ?toggled="${this.printable}"
            >
            </editable-table-editor-toggle>
          </div>
        </div>
      </div>
      <div id="htmlImport" hidden><slot></slot></div>
    `}static get tag(){return"editable-table"}haxHooks(){return{activeElementChanged:"haxactiveElementChanged"}}haxactiveElementChanged(e,t){if(!t){let t=this.getTableHTMLNode();e&&e.replaceWith(t),e=t}return this.toggleEditMode(t),e}constructor(){super(),this.haxUIElement=!0,this.editMode=!1,this.hideBordered=!1,this.hideCondensed=!1,this.hideDownloadable=!1,this.hideFilter=!1,this.hideResponsive=!1,this.hidePrintable=!1,this.hideSort=!1,this.hideStriped=!1,this.config=[{type:"button-group",buttons:[{command:"close",icon:"close",label:"Close toolbar",toggles:!1,type:"rich-text-editor-button"}]},{type:"button-group",buttons:[{command:"bold",icon:"editor:format-bold",label:"Bold",toggles:!0,type:"rich-text-editor-button"},{command:"italic",icon:"editor:format-italic",label:"Italics",toggles:!0,type:"rich-text-editor-button"},{command:"removeFormat",icon:"editor:format-clear",label:"Erase Format",type:"rich-text-editor-button"}]},{type:"button-group",buttons:[{command:"link",icon:"link",label:"Link",toggledCommand:"unlink",toggledIcon:"mdextra:unlink",toggledLabel:"Unink",toggles:!0,type:"rich-text-editor-link"}]},{label:"Subscript and Superscript",buttons:[{command:"subscript",icon:"mdextra:subscript",label:"Subscript",toggles:!0,type:"rich-text-editor-button"},{command:"superscript",icon:"mdextra:superscript",label:"Superscript",toggles:!0,type:"rich-text-editor-button"}]}]}static get properties(){return{...o.properties,config:{type:Array},editMode:{type:Boolean,attribute:"edit-mode"},hideBordered:{type:Boolean,attribute:"hide-bordered"},hideCondensed:{type:Boolean,attribute:"hide-condensed"},hideDownloadable:{type:Boolean,attribute:"hide-downloadable"},hideFilter:{type:Boolean,attribute:"hide-filter"},hideNumericStyles:{type:Boolean,attribute:"hide-numeric-styles"},hidePrintable:{type:Boolean,attribute:"hide-printable"},hideResponsive:{type:Boolean,attribute:"hide-responsive"},hideSort:{type:Boolean,attribute:"hide-sort"},hideStriped:{type:Boolean,attribute:"hide-striped"}}}get hideSortFilter(){return this.hideSort&&this.hideFilter}get hideDisplay(){return this.hideBordered&&this.hideCondensed&&this.hideStriped&&this.hideNumericStyles&&this.hideResponsive}deleteColumn(e){let t=[...this.data];for(let i=0;i<t.length;i++)t[i].splice(e,1);this.data=t}deleteRow(e){let t=[...this.data];t.splice(e,1),this.data=t}insertColumn(e){let t=[...this.data];for(let i=0;i<t.length;i++)t[i].splice(e,0," ");this.data=t}insertRow(e){let t=[...this.data],i=new Array;for(let e=0;e<t[0].length;e++)i.push(" ");t.splice(e+1,0,i),this.data=t}toggleEditMode(e){e=void 0!==e?e:!this.editMode,this.dispatchEvent(new CustomEvent("toggle-edit-mode",{bubbles:!0,cancelable:!0,composed:!0,detail:this})),e&&this.shadowRoot&&this.shadowRoot.querySelector("editable-table-display")?(this.shadowRoot.querySelector("editable-table-display").toggleFilter(),this.shadowRoot.querySelector("editable-table-display").sortData("none",-1),this.shadowRoot.querySelector("#inner").focus()):this.shadowRoot.querySelectorAll("rich-text-editor").forEach((e=>{e.disableEditing()})),this.editMode=e}_captionChanged(e){this.caption=e.detail}_getCurrentRow(e,t){let i=null;return null!=t&&void 0!==t[e]&&null!==t[e]&&(i=t[e]),i}_handleMenuOpen(e){console.log(e)}_handleRowColumnMenu(e){e.detail.insert&&e.detail.row?this.insertRow(e.detail.index):e.detail.insert&&!e.detail.row?this.insertColumn(e.detail.index):!e.detail.insert&&e.detail.row?this.deleteRow(e.detail.index):this.deleteColumn(e.detail.index)}_isFirstRow(e){return 0===e}_isSortDisabled(e,t){return e||!t}_onCellClick(e){e.model&&e.model.root&&e.model.root.nodeList[0]&&e.model.root.nodeList[0].focus()}_onCellValueChange(e,t,i){let o=this.data.slice();o[t][i]=e.detail,this.data=[],this.data=o}_onTableSettingChange(e){this[e.detail.id]=e.detail.toggled}_dataChanged(e,t){(e&&e.length<1||e[0].length<1)&&(this.data=[["","",""],["","",""],["","",""]])}_getLabel(e){let t="ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),i=this._getLetter(e).split("-").reverse(),o="";for(let e=0;e<i.length;e++)""!==i[e]&&(o+=t[i[e]]);return o}_getLetter(e){let t=Math.floor(e/26),i="";return i+=e-26*t+"-",t>0&&t<26?i+=t-1+"-":t>=26&&(i+=this._getLetter(t-1)),i}}window.customElements.define(EditableTable.tag,EditableTable);export{EditableTable};