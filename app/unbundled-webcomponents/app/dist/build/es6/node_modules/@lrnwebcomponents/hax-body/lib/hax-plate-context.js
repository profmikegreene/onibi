import{LitElement as t,css as e,html as a}from"../../../lit-element/lit-element.js";import"./hax-toolbar.js";import"../../simple-toolbar/lib/simple-toolbar-menu-item.js";import{HAXStore as o}from"./hax-store.js";import"./hax-toolbar-menu.js";import"./hax-context-item.js";import{autorun as i,toJS as l}from"../../../mobx/dist/mobx.esm.js";import{HaxContextBehaviors as n}from"./hax-context-behaviors.js";import{normalizeEventPath as s}from"../../utils/utils.js";import{I18NMixin as r}from"../../i18n-manager/lib/I18NMixin.js";class HaxPlateContext extends(r(n(t))){constructor(){super(),this.hasActiveEditingElement=!1,this.haxUIElement=!0,this.tourName="hax",this.t={dragHandle:"Drag handle",moveUp:"Move up",moveDown:"Move down",addColumn:"Add column",removeColumn:"Remove column",remove:"Remove",duplicate:"Duplicate",confirmDelete:"Confirm delete"},this.registerLocalization({context:this,namespace:"hax"})}static get tag(){return"hax-plate-context"}static get styles(){return[...super.styles,e`
        :host {
          width: 176px;
        }
        hax-toolbar {
          flex: 0 0 auto;
        }
        #remove {
          max-width: 44px;
          overflow: visible;
        }
      `]}render(){return a`
      <div id="toolbar" class="area">
        <hax-toolbar always-expanded>
          <div class="group">
            <hax-toolbar-menu
              ?disabled="${this.hasActiveEditingElement}"
              id="drag"
              action
              icon="hax:arrow-all"
              label="${this.t.dragHandle}"
              draggable="true"
              reset-on-select
              data-simple-tour-stop
              data-stop-title="label"
            >
              <simple-toolbar-menu-item slot="menuitem">
                <hax-context-item
                  action
                  align-horizontal="left"
                  ?disabled="${this.hasActiveEditingElement}"
                  show-text-label
                  role="menuitem"
                  icon="hax:keyboard-arrow-up"
                  label="${this.t.moveUp}"
                  event-name="hax-plate-up"
                ></hax-context-item>
              </simple-toolbar-menu-item>
              <simple-toolbar-menu-item slot="menuitem">
                <hax-context-item
                  action
                  align-horizontal="left"
                  ?disabled="${this.hasActiveEditingElement}"
                  role="menuitem"
                  show-text-label
                  icon="hax:keyboard-arrow-down"
                  label="${this.t.moveDown}"
                  event-name="hax-plate-down"
                ></hax-context-item>
              </simple-toolbar-menu-item>
              <div slot="tour" data-stop-content>
                Click the drag handle once to show a menu to just move up or
                down one item in the content OR click and drag to place the item
                exactly where you want it to go.
              </div>
            </hax-toolbar-menu>
          </div>
          <div class="group">
            <hax-context-item
              action
              id="right"
              class="paddle"
              icon="hax:table-column-remove"
              label="${this.t.addColumn}"
              ?disabled="${this.hasActiveEditingElement}"
              event-name="hax-plate-create-right"
              data-simple-tour-stop
              data-stop-title="label"
            >
              <div slot="tour" data-stop-content>
                Add a column to split the current column into two pieces. This
                can be done up to six pieces columns. For differnet layouts see
                Grid settings panel.
              </div>
            </hax-context-item>
            <hax-context-item
              action
              class="paddle"
              icon="hax:table-column-plus-after"
              label="${this.t.removeColumn}"
              ?disabled="${this.hasActiveEditingElement}"
              event-name="hax-plate-remove-right"
              id="rightremove"
              data-simple-tour-stop
              data-stop-title="label"
            >
              <div slot="tour" data-stop-content>
                Remove a column from the split column layout. If at two columns
                and removing it will remove the layout split and make it 100%
                width.
              </div>
            </hax-context-item>
            <hax-context-item
              action
              ?disabled="${this.hasActiveEditingElement}"
              label="${this.t.duplicate}"
              icon="icons:content-copy"
              event-name="hax-plate-duplicate"
              data-simple-tour-stop
              data-stop-title="label"
            >
              <div slot="tour" data-stop-content>
                Duplicate the active piece of content and place it below the
                current item.
              </div>
            </hax-context-item>
          </div>
          <div class="group">
            <hax-toolbar-menu
              id="remove"
              action
              ?disabled="${this.hasActiveEditingElement}"
              icon="delete"
              label="${this.t.remove}"
              reset-on-select
              data-simple-tour-stop
              data-stop-title="label"
              @dblclick=${this.__dblClickFire}
            >
              <simple-toolbar-menu-item slot="menuitem">
                <hax-context-item
                  action
                  danger
                  align-horizontal="left"
                  ?disabled="${this.hasActiveEditingElement}"
                  show-text-label
                  role="menuitem"
                  icon="delete"
                  label="${this.t.confirmDelete}"
                  event-name="hax-plate-delete"
                ></hax-context-item>
              </simple-toolbar-menu-item>
              <div slot="tour" data-stop-content>
                Delete the current item. You can always use the undo arrow to
                bring this back.
              </div>
            </hax-toolbar-menu>
          </div>
        </hax-toolbar>
      </div>
    `}__updatePlatePosition(t){let e=this.shadowRoot.querySelector("#right"),a=this.shadowRoot.querySelector("#rightremove");e.disabled=!1,a.disabled=!1,t&&"GRID-PLATE"==t.tagName?"1-1-1-1-1-1"==t.layout&&(e.disabled=!0):a.disabled=!0}__dblClickFire(t){"remove"===t.target.id&&this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,cancelable:!0,composed:!0,detail:{target:t.target,eventName:"hax-plate-delete",value:t.target.value}}))}firstUpdated(t){super.firstUpdated(t),i((()=>{const t=l(o.activeNode);t&&this.getAttribute("on-screen")&&this.__updatePlatePosition(t)})),i((()=>{l(o.activeEditingElement)?this.hasActiveEditingElement=!0:this.hasActiveEditingElement=!1})),this.shadowRoot.querySelector("#drag").addEventListener("dragstart",this._dragStart),this.shadowRoot.querySelector("#drag").addEventListener("dragend",this._dragEnd)}_dragEnd(t){let e=s(t)?s(t)[0]:void 0;e&&e.close(!0),o._lockContextPosition=!1}_dragStart(t){let e=l(o.activeNode),a=s(t)?s(t)[0]:void 0;a&&a.close(!0),o.__dragTarget=e,o._lockContextPosition=!0,o.activeHaxBody.__activeHover=null,o.activeHaxBody._hideContextMenu(o.activeHaxBody.contextMenus.add),t.dataTransfer&&(t.dataTransfer.effectAllowed="move",t.dataTransfer.dropEffect="move",t.dataTransfer.setDragImage(e,-20,-20)),t.stopPropagation(),t.stopImmediatePropagation()}static get properties(){return{...super.properties,hasActiveEditingElement:{type:Boolean}}}}window.customElements.define(HaxPlateContext.tag,HaxPlateContext);export{HaxPlateContext};